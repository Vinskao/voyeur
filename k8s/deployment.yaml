apiVersion: v1
kind: Secret
metadata:
  name: voyeur-secrets
type: Opaque
stringData:
  MONGODB_URI: "${MONGODB_URI}"
  MONGODB_USERNAME: "${MONGODB_USERNAME}"
  MONGODB_PASSWORD: "${MONGODB_PASSWORD}"
  MONGODB_AUTH_SOURCE: "${MONGODB_AUTH_SOURCE}"
  VOYEUR_SECRET_KEY: "${VOYEUR_SECRET_KEY}"
  DJANGO_HOST: "${DJANGO_HOST}"
  DJANGO_ENV: "${DJANGO_ENV}"
  REDIS_HOST: "${REDIS_HOST}"
  REDIS_CUSTOM_PORT: "${REDIS_CUSTOM_PORT}"
  REDIS_PASSWORD: "${REDIS_PASSWORD}"
  REDIS_QUEUE_VOYEUR: "${REDIS_QUEUE_VOYEUR}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: voyeur
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: voyeur
  template:
    metadata:
      labels:
        app.kubernetes.io/name: voyeur
    spec:
      containers:
      - name: voyeur
        image: papakao/voyeur-producer:latest
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: MONGODB_URI
        - name: VOYEUR_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: VOYEUR_SECRET_KEY
        - name: DJANGO_DEBUG
          value: "False"
        - name: DJANGO_ALLOWED_HOSTS
          value: "peoplesystem.tatdvsonorth.com"
        - name: DJANGO_HOST
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: DJANGO_HOST
        - name: DJANGO_ENV
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: DJANGO_ENV
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: REDIS_HOST
        - name: REDIS_CUSTOM_PORT
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: REDIS_CUSTOM_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: REDIS_PASSWORD
        - name: REDIS_QUEUE_VOYEUR
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: REDIS_QUEUE_VOYEUR
        - name: WEBSOCKET_TYMB
          valueFrom:
            secretKeyRef:
              name: voyeur-secrets
              key: WEBSOCKET_TYMB
---
apiVersion: v1
kind: Service
metadata:
  name: voyeur
  labels:
    app.kubernetes.io/name: voyeur
  namespace: default
spec:
  selector:
    app.kubernetes.io/name: voyeur
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voyeur-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    cert-manager.io/cluster-issuer: letsencrypt-production
    cert-manager.io/certificate-name: peoplesystem-tls
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - peoplesystem.tatdvsonorth.com
    secretName: peoplesystem-tls
  rules:
  - host: peoplesystem.tatdvsonorth.com
    http:
      paths:
      - path: /voyeur/
        pathType: Prefix
        backend:
          service:
            name: voyeur
            port:
              number: 80